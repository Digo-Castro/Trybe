{"ast":null,"code":"var _jsxFileName = \"/home/digocastro/Curso_Trybe/Git/Trybe/Modulo_2/BLOCO_16/DIA_2/lesson/my-app/src/InputList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport addAssignment from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass InputList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      textValue: ''\n    };\n  }\n\n  stateUpdate(event) {\n    this.setState({\n      textValue: event.target.value\n    });\n  }\n\n  render() {\n    const {\n      textValue\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Digite a tarefa\",\n        onChange: event => this.setState({\n          textValue: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => this.props.add(textValue),\n        children: \"Adicionar tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  add: value => dispatch(addAssignment(value))\n});\n\nexport default connect(null, mapDispatchToProps)(InputList);\nInputList.propTypes = {\n  add: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/digocastro/Curso_Trybe/Git/Trybe/Modulo_2/BLOCO_16/DIA_2/lesson/my-app/src/InputList.js"],"names":["React","PropTypes","connect","addAssignment","InputList","Component","constructor","props","state","textValue","stateUpdate","event","setState","target","value","render","add","mapDispatchToProps","dispatch","propTypes","func","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,WAA1B;;;AAEA,MAAMC,SAAN,SAAwBJ,KAAK,CAACK,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,SAAKC,QAAL,CAAc;AACZH,MAAAA,SAAS,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADZ,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEN,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBACE;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,iBAFd;AAGE,QAAA,QAAQ,EAAGG,KAAD,IAAW,KAAKC,QAAL,CAAc;AAAEH,UAAAA,SAAS,EAAEE,KAAK,CAACE,MAAN,CAAaC;AAA1B,SAAd;AAHvB;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,MAAM,KAAKP,KAAL,CAAWS,GAAX,CAAeP,SAAf,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAYD;;AA7BqC;;AAgCxC,MAAMQ,kBAAkB,GAAIC,QAAD,KAAe;AACxCF,EAAAA,GAAG,EAAGF,KAAD,IAAWI,QAAQ,CAACf,aAAa,CAACW,KAAD,CAAd;AADgB,CAAf,CAA3B;;AAIA,eAAeZ,OAAO,CAAC,IAAD,EAAOe,kBAAP,CAAP,CAAkCb,SAAlC,CAAf;AAEAA,SAAS,CAACe,SAAV,GAAsB;AACpBH,EAAAA,GAAG,EAAEf,SAAS,CAACmB,IAAV,CAAeC;AADA,CAAtB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport addAssignment from './actions';\n\nclass InputList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      textValue: '',\n    };\n  }\n\n  stateUpdate(event) {\n    this.setState({\n      textValue: event.target.value,\n    });\n  }\n\n  render() {\n    const { textValue } = this.state;\n    return (\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Digite a tarefa\"\n          onChange={(event) => this.setState({ textValue: event.target.value })}\n        />\n        <button type=\"button\" onClick={() => this.props.add(textValue)}>\n          Adicionar tarefa\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  add: (value) => dispatch(addAssignment(value)),\n});\n\nexport default connect(null, mapDispatchToProps)(InputList);\n\nInputList.propTypes = {\n  add: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}