{"ast":null,"code":"var _jsxFileName = \"/home/digocastro/Curso_Trybe/Git/Trybe/Modulo_2/BLOCO_16/DIA_3/lesson/form-with-redux/src/components/Form.js\";\n\n/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport addParticipant from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      firstName: '',\n      lastName: '',\n      age: 0,\n      attendance: false\n    };\n    this.getInfos = this.getInfos.bind(this);\n  }\n\n  getInfos(event) {\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n    this.setState({\n      [event.target.name]: value\n    });\n  }\n\n  render() {\n    const {\n      firstName,\n      lastName,\n      age,\n      attendance\n    } = this.state;\n    const {\n      addParticipant\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"firstName\",\n          children: [\"Nome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"firstName\",\n            value: firstName,\n            onChange: this.getInfos,\n            max: \"20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lastName\",\n          children: [\"Sobrenome:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"lastName\",\n            value: lastName,\n            onChange: this.getInfos,\n            max: \"30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: [\"Idade:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"age\",\n            value: age,\n            onChange: this.getInfos,\n            max: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"attendance\",\n          children: [\"Vai comparecer?\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"attendance\",\n            checked: attendance,\n            onChange: this.getInfos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => addParticipant({\n          firstName,\n          lastName,\n          age,\n          attendance\n        }),\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  addParticipant: partcipant => dispatch(addParticipant(partcipant))\n});\n\nexport default connect(null, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/home/digocastro/Curso_Trybe/Git/Trybe/Modulo_2/BLOCO_16/DIA_3/lesson/form-with-redux/src/components/Form.js"],"names":["React","connect","addParticipant","Form","Component","constructor","state","firstName","lastName","age","attendance","getInfos","bind","event","value","target","type","checked","setState","name","render","props","mapDispatchToProps","dispatch","partcipant"],"mappings":"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","sourcesContent":["/* eslint-disable react/prefer-stateless-function */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport addParticipant from '../redux/actions';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      age: 0,\n      attendance: false,\n    };\n\n    this.getInfos = this.getInfos.bind(this);\n  }\n\n  getInfos(event) {\n    const value = event.target.type === 'checkbox' ? event.target.checked : event.target.value;\n\n    this.setState({\n      [event.target.name]: value,\n    });\n  }\n\n  render() {\n    const {\n      firstName, lastName, age, attendance,\n    } = this.state;\n    const { addParticipant } = this.props;\n    return (\n      <section>\n        <form>\n          <label htmlFor=\"firstName\">\n            Nome:\n            <input type=\"text\" name=\"firstName\" value={firstName} onChange={this.getInfos} max=\"20\" />\n          </label>\n          <label htmlFor=\"lastName\">\n            Sobrenome:\n            <input type=\"text\" name=\"lastName\" value={lastName} onChange={this.getInfos} max=\"30\" />\n          </label>\n          <label htmlFor=\"age\">\n            Idade:\n            <input type=\"number\" name=\"age\" value={age} onChange={this.getInfos} max=\"3\" />\n          </label>\n          <label htmlFor=\"attendance\">\n            Vai comparecer?\n            <input type=\"checkbox\" name=\"attendance\" checked={attendance} onChange={this.getInfos} />\n          </label>\n        </form>\n        <button\n          type=\"button\"\n          onClick={() => addParticipant({\n            firstName, lastName, age, attendance,\n          })}\n        >\n          Cadastrar\n        </button>\n        {/* <button type=\"button\" onClick>Limpar</button> */}\n      </section>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  addParticipant: (partcipant) => dispatch(addParticipant(partcipant)),\n});\n\nexport default connect(null, mapDispatchToProps)(Form);\n"]},"metadata":{},"sourceType":"module"}